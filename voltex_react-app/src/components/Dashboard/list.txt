<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<!-- Navbar -->
<div class="w3-top">
  <div class="w3-bar w3-black w3-card">
    <a class="w3-bar-item w3-button w3-padding-large w3-hide-medium w3-hide-large w3-right" href="javascript:void(0)" onclick="myFunction()" title="Toggle Navigation Menu"><i class="fa fa-bars"></i></a>
    <a href="#" class="w3-bar-item w3-button w3-padding-large">HOME</a>
    <a href="#band" class="w3-bar-item w3-button w3-padding-large w3-hide-small">BAND</a>
    <a href="#tour" class="w3-bar-item w3-button w3-padding-large w3-hide-small">TOUR</a>
    <a href="#contact" class="w3-bar-item w3-button w3-padding-large w3-hide-small">CONTACT</a>
    <div class="w3-dropdown-hover w3-hide-small">
      <button class="w3-padding-large w3-button" title="More">MORE <i class="fa fa-caret-down"></i></button>     
      <div class="w3-dropdown-content w3-bar-block w3-card-4">
        <a href="#" class="w3-bar-item w3-button">Merchandise</a>
        <a href="#" class="w3-bar-item w3-button">Extras</a>
        <a href="#" class="w3-bar-item w3-button">Media</a>
      </div>
    </div>
    <a href="javascript:void(0)" class="w3-padding-large w3-hover-red w3-hide-small w3-right"><i class="fa fa-search"></i></a>
  </div>
</div>

<!-- Navbar on small screens (remove the onclick attribute if you want the navbar to always show on top of the content when clicking on the links) -->
<div id="navDemo" class="w3-bar-block w3-black w3-hide w3-hide-large w3-hide-medium w3-top" style="margin-top:46px">
  <a href="#band" class="w3-bar-item w3-button w3-padding-large" onclick="myFunction()">BAND</a>
  <a href="#tour" class="w3-bar-item w3-button w3-padding-large" onclick="myFunction()">TOUR</a>
  <a href="#contact" class="w3-bar-item w3-button w3-padding-large" onclick="myFunction()">CONTACT</a>
  <a href="#" class="w3-bar-item w3-button w3-padding-large" onclick="myFunction()">MERCH</a>
</div>

























->> check if a list has a loop
//For a singly linked list
hasloop = function(head){
       var nodes = new Set();
       var current = head;
       
       do{
           if(nodes.has(current)){
               return true;
           }
           nodes.add(current);
           current = current.next;
       }while(current);
       return false;
   }
//For a doubly linked  list
hasloopd = function(head){
     var current = head;
     var previous = null;
     do{
          if(previous && current.previous !== undefined && previous !== current.previous){
               return true;
          }
          if(current.previous === undefined){
               current.previous = previous;
          }
          previous = current;
          current = current.next;
     }while(current);
     return false;
};

->Algorithm to generate unique 16 character number
//This function is to generate a modlular exponential of the numbers
        //@params base {number}
        //@params exponent {number}
        //@params modulus {number}
        function ModularExp(base, exponent, modulus){
            if (modulus === 1) return 0;
            var value = 1;
            for(let i = 0; i< exponent; i++){
                value = (value * base) % modulus;
            }
            return Number(value);
        }

        //This function is to convert the ModularExp number to a random 16 characters string
        //@params number {number} is the returned value from the ModularExp algorithm
        function convertTo16chars(number){
            var uniqueid = String(number);
            for(let i=0; i < 16; i++){
                uniqueid += Math.ceil(Math.random() * 10 * i*i);
                uniqueid += Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 1);
            }
            return uniqueid.slice(0, 16);//encodes to base64, and slices to a 16 character string
        }
        // let id = convertTo16chars(ModularExp(Math.round(Math.random()*10), Math.round(Math.random()*10), Math.round(Math.random()*10)));